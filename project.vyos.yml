heat_template_version: 2017-02-24

description: This template will spin up a VM using the CentOS cloud image.

parameters:
  vm_name:
    type: string
    label: VM Name
    description:  Enter the name of this VM

  key_name:
    type: string
    label: Keypair
    description:  Enter the keypair to use
    default: VyOS

  image_id:
    type: string
    label: Image ID
    description: Enter the Name or ID of the image to use
    default: VyOS

  instance_type:
    type: string
    label: Flavor
    description: Enter the flavor name or ID
    default: test.vyos

  bgp_ip:
    type: string
    label: BGP Network IP Address
    description: Enter the IP address to use from the 10.188.254.0/23 subnet.

  private_network:
    type: string
    label: Private Network Name
    description: Enter the network to use

  private_subnet:
    type: string
    label: Private Subnet Name
    description: Enter the name of the subnet

  private_ip:
    type: string
    label: Private Network IP Address
    description: Enter the IP address to use from the 10.188.254.0/23 subnet.    

  availability_zone:
    type: string
    label: Availability Zone
    description:  Enter the Availabilty Zone for the instance
    default:  labAxiros

resources:
  project_vyos:
    type: OS::Nova::Server
    properties:
      name: { get_param: vm_name }
      key_name: {get_param: key_name}
      flavor:  {get_param: instance_type}
      image: {get_param: image_id}
      networks:
      - port: { get_resource: eth0 }
      - port: { get_resource: eth1 }
      user_data:
        str_replace:
          params:
            $HOSTNAME: { get_param: vm_name }
            $ETH0: { get_param: bgp_ip }
            $ETH1: { get_param: private_ip }
            
            
  eth0:
      type: OS::Neutron::Port
      properties:
          name: {get_param: bgp_ip}
          network_id: EdgeProjectsBGP
          fixed_ips: [{"subnet": 10.188.254.0/23, "ip_address": {get_param: bgp_ip}}]

  eth1:
      type: OS::Neutron::Port
      properties:
          name: {get_param: private_ip}
          network_id: {get_param: private_network}
          fixed_ips: [{"subnet": {get_param: private_subnet}, "ip_address": {get_param: private_ip}}] 

  centos_cloud_server_wait:
    type: AWS::CloudFormation::WaitCondition
    depends_on: [eth0]
    properties:
      Handle:
        get_resource: centos_cloud_server_wait_handle
      Timeout: 1000

  centos_cloud_server_wait_handle:
    type: AWS::CloudFormation::WaitConditionHandle
