heat_template_version: 2017-02-24

description: This template will spin up a VM using the CentOS cloud image.

parameters:
  key_name:
    type: string
    label: Keypair
    description:  Enter the keypair to use
    default: Lab1

  image_id:
    type: string
    label: Image ID
    description: Enter the Name or ID of the image to use
    default: CentOS-7-x86_64-GenericCloud-1511.qcow2

  instance_type:
    type: string
    label: Flavor
    description: Enter the flavor name or ID
    default: lab.small

  network_name:
    type: string
    label: Network
    description: Enter the network to use
    default: IPv6_v4

  availability_zone:
    type: string
    label: Availability Zone
    description:  Enter the Availabilty Zone for the instance
    default:  labAxiros

  volume_size:
    type: number
    label: Volume Size
    description: Enter the Volume Size in GB
    constraints:
      - range: {min: 1, max: 1024}
        description: Must be between 1 and 1024 GB

  data_volume:
    type: string
    label: Volume Mount Point
    description:  The drive that will be associated with this volume.
    default: /dev/vdb

  data_dir:
    type: string
    label: Directory to Mount the Volume
    description:  The directory to which the attached volume will be mounted.
    default: /data

resources:
  centos_cloud_server:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      flavor:  {get_param: instance_type}
      image: {get_param: image_id}
      networks: [{network: {get_param: network_name }}]
      user_data:
        str_replace:
          params:
            $LOGFILE: /tmp/installlog.log
            $VOLSIZE: { get_param: volume_size }
            $MOUNT_DIR: { get_param: data_dir }
          template: |
            #!/bin/bash -v
              die() {
              _WC-NOTIFY_ --data-binary '{"status": "FAILURE"}'
                exit 1
              } 
            yum install -y lvm2 >> $LOGFILE 2>&1 || die
            mkdir -p $MOUNT_DIR
            pvcreate /dev/vdb >> $LOGFILE 2>&1 || die
            vgcreate volgroup01 /dev/vdb >> $LOGFILE 2>&1 || die
            lvcreate -l +100%FREE -n lvol01 volgroup01 >> $LOGFILE 2>&1 || die
            mkfs.ext4 -F /dev/mapper/volgroup01-lvol01 >> $LOGFILE 2>&1 || die
            mkdir /data
            echo "/dev/mapper/volgroup01-lvol01 /data ext4 defaults 0 0" >> /etc/fstab
              mount -a
            df -ah >> $LOGFILE 2>&1 || die

  cinder_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size}
      availability_zone: {get_param: availability_zone}

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: {get_resource: cinder_volume}
      instance_uuid: {get_resource: centos_cloud_server}
      mountpoint: /dev/vdb

  centos_cloud_server_wait:
    type: AWS::CloudFormation::WaitCondition
    depends_on: [centos_cloud_server, cinder_volume, volume_attachment]
    properties:
      Handle:
        get_resource: centos_cloud_server_wait_handle
      Timeout: 1000

  centos_cloud_server_wait_handle:
    type: AWS::CloudFormation::WaitConditionHandle
